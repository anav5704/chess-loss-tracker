generator client {
    provider = "prisma-client-js"
    output   = "../../../node_modules/@prisma/postgres"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_DATABASE_URL")
}

model User {
    id            String    @id
    name          String
    email         String
    emailVerified Boolean
    image         String?
    createdAt     DateTime
    updatedAt     DateTime
    ccUsername    String?
    loUsername    String?
    sessions      Session[]
    accounts      Account[]
    games         Game[]

    @@unique([email])
    @@map("user")
}

model Session {
    id        String   @id
    expiresAt DateTime
    token     String
    createdAt DateTime
    updatedAt DateTime
    ipAddress String?
    userAgent String?
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([token])
    @@map("session")
}

model Account {
    id                    String    @id
    accountId             String
    providerId            String
    userId                String
    user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    accessToken           String?
    refreshToken          String?
    idToken               String?
    accessTokenExpiresAt  DateTime?
    refreshTokenExpiresAt DateTime?
    scope                 String?
    password              String?
    createdAt             DateTime
    updatedAt             DateTime

    @@map("account")
}

model Verification {
    id         String    @id
    identifier String
    value      String
    expiresAt  DateTime
    createdAt  DateTime?
    updatedAt  DateTime?

    @@map("verification")
}

model Game {
    id          String      @id @default(uuid())
    userId      String
    user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
    pgn         String      @unique
    site        Site
    url         String
    opponent    String
    date        DateTime
    timeControl TimeControl
    opening     String
    moveCount   Int
    termination Termination
    gamePhase   GamePhase
    color       Color
    notes       String
    reviewed    Boolean     @default(false)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    @@map("game")
}

enum Site {
    CHESS_COM
    LICHESS_ORG
    OTHER
}

enum TimeControl {
    BULLET
    BLITZ
    RAPID
    CLASSICAL
}

enum GamePhase {
    OPENING
    MIDDLE_GAME
    END_GAME
}

enum Termination {
    CHECKMATE
    RESIGNATION
    TIMEOUT
}

enum Color {
    WHITE
    BLACK
}
